{"version":3,"sources":["models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;ADQA,ACNA,IDMA,ACNM,IDMN,ACNU,GDMV,ACNa,IAAI,MAAA,CAAA,EDMjB,ECNqB,CAAC,CAAA,CAAE,CAAC,MDMzB;ACJA,EDOE,SAAA,IAAA,CAAoB,IAAe,EAAA;IAAf,IAAA,CAAA,IAAI,GAAJ,IAAI;IAFxB,IAAA,CAAA,MAAM,GAAkC,CAAA,CAAE;EAEJ;ACFxC,EDIE,ECJE,CAAC,CDIH,CAAA,ACJK,CAAC,QDIN,ACJc,CDId,CCJgB,EDIb,GAAH,OCJgB,GDIZ,QAAgB,EAAA;ECHpB,EDIE,KCJK,CAAC,CDIC,ECJE,CAAC,CDIC,CAAC,IAAI,CAAC,CCJC,CAAC,MDIM,CAAC;ACH9B,CAAC,CDIC,ACJA,CDIC;ACFH,EDIE,ECJE,CAAC,CDIH,CAAA,ACJK,CAAC,QDIN,ACJc,CDId,CCJgB,EDIb,GAAH,OCJgB,GDIZ,MAAiB,EAAA;ECHrB,EDIE,KCJK,CDIC,ACJA,CDIC,ECJE,CAAC,GDIG,CAAC,IAAI,CAAC,ACJA,CAAC,GDIG,EAAE,MAAM,CAAC;ACHpC,CAAC,CDIC,ACJA,CDIC;ACFH,EDIE,ECJE,CAAC,CDIH,CAAA,ACJK,CAAC,QDIN,ACJc,CDId,CCJgB,CDId,GAAF,QCJgB,EDIb,SAAiB,EAAE,QAAkB,EAAA;ECHxC,EDIE,KCJK,CAAC,GAAG,CAAC,sBAAsB,CAAC;AACrC,CAAC,CAAC,EDIE;ACFJ,IDGI,ACHA,CAAC,GDGG,CAAC,GCHG,CAAC,EDGE,CAAC,KCHK,CAAC,GDGG,CAAC,CAAC,CAAC;ACD5B,IDEI,ACFA,CAAC,GDEK,ICFE,CAAC,GDEK,GAAG,ECFA,CAAC,CDEG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;IAC/C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;IACvB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ;EACnC,CAAC;EAED,IAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,SAAiB,EAAA;IACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;IACvC;IACA,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;MACtC;MACA;;IAGF,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;MACpB,IAAI,CAAA,CAAE;IACR,CAAC,CAAC;EACJ,CAAC;EACH,OAAA,IAAC;AAAD,CAlCA,CAAA,CAAA;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export interface UserProps {\r\n  name?: string;\r\n  age?: number;\r\n}\r\n\r\n// type aliace\r\ntype Callback = () => void;\r\n\r\nexport class User {\r\n  events: { [key: string]: Callback[] } = {};\r\n\r\n  constructor(private data: UserProps) {}\r\n\r\n  get(propName: string): string | number {\r\n    return this.data[propName];\r\n  }\r\n\r\n  set(update: UserProps): void {\r\n    Object.assign(this.data, update);\r\n  }\r\n\r\n  on(eventName: string, callback: Callback): void {\r\n    // quick example\r\n    // this.events['sdfsdfdsf'] = [() => {}];\r\n    this.events[eventName]; // either Callback[] or undefined\r\n    const handlers = this.events[eventName] || []; // in case of undefined we assign an empty array\r\n    handlers.push(callback);\r\n    this.events[eventName] = handlers;\r\n  }\r\n\r\n  trigger(eventName: string): void {\r\n    const handlers = this.events[eventName];\r\n    // if handlers undefined or an empty array\r\n    if (!handlers || handlers.length === 0) {\r\n      // return early\r\n      return;\r\n    }\r\n\r\n    handlers.forEach((item) => {\r\n      item();\r\n    });\r\n  }\r\n}\r\n","import { User } from '../models/User';\r\n\r\nconst user = new User({});\r\n\r\n/* user.set({ name: 'Silvester', age: 30 });\r\n\r\nconsole.log(user.get('name'));\r\nconsole.log(user.get('age')); */\r\n\r\nuser.on('change', () => {\r\n  console.log('change');\r\n});\r\n\r\nuser.on('change', () => {\r\n  console.log('change2');\r\n});\r\n\r\nuser.on('delete', () => {\r\n  console.log('Delete was triggered');\r\n});\r\n\r\nuser.trigger('change');\r\n\r\nuser.trigger('delete');\r\n"]}